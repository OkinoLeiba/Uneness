# Generated by Django 5.2.5 on 2025-08-12 19:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExericePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highres', models.URLField()),
                ('thumb', models.URLField()),
                ('is_user_uploaded', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food', models.CharField()),
                ('food_name', models.CharField(max_length=100)),
                ('brand_name', models.CharField(blank=True, max_length=100, null=True)),
                ('serving_qty', models.FloatField()),
                ('serving_unit', models.CharField(max_length=50)),
                ('serving_weight_grams', models.FloatField()),
                ('nf_calories', models.FloatField()),
                ('nf_total_fat', models.FloatField()),
                ('nf_saturated_fat', models.FloatField()),
                ('nf_cholesterol', models.FloatField()),
                ('nf_sodium', models.FloatField()),
                ('nf_total_carbohydrate', models.FloatField()),
                ('nf_dietary_fiber', models.FloatField()),
                ('nf_sugars', models.FloatField()),
                ('nf_protein', models.FloatField()),
                ('nf_potassium', models.FloatField()),
                ('nf_p', models.FloatField()),
                ('consumed_at', models.DateTimeField()),
                ('source', models.IntegerField()),
                ('ndb_no', models.IntegerField(blank=True, null=True)),
                ('meal_type', models.IntegerField()),
                ('nix_brand_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nix_brand_id', models.CharField(blank=True, max_length=100, null=True)),
                ('nix_item_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nix_item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('upc', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('sub_recipe', models.CharField(blank=True, max_length=100, null=True)),
                ('class_code', models.CharField(blank=True, max_length=100, null=True)),
                ('brick_code', models.CharField(blank=True, max_length=100, null=True)),
                ('tag_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(max_length=100)),
                ('serving_unit', models.CharField(max_length=50)),
                ('tag_name', models.CharField(max_length=100)),
                ('serving_qty', models.FloatField()),
                ('common_type', models.CharField(blank=True, max_length=100, null=True)),
                ('tag_id', models.CharField(max_length=50)),
                ('locale', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.IntegerField()),
                ('user_input', models.CharField(max_length=255)),
                ('duration_min', models.FloatField()),
                ('met', models.FloatField()),
                ('nf_calories', models.FloatField()),
                ('compendium_code', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('benefits', models.TextField(blank=True, null=True)),
                ('photo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exercise', to='nutrition.exericephoto')),
            ],
        ),
        migrations.CreateModel(
            name='AltMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_weight', models.FloatField()),
                ('measure', models.CharField(max_length=50)),
                ('seq', models.IntegerField(blank=True, null=True)),
                ('qty', models.FloatField()),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alt_measures', to='nutrition.food')),
            ],
        ),
        migrations.CreateModel(
            name='FoodPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.URLField()),
                ('food_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='nutrition.fooditem')),
            ],
        ),
        migrations.CreateModel(
            name='FullNutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_id', models.IntegerField()),
                ('value', models.FloatField()),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='full_nutrients', to='nutrition.food')),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_raw_food', models.BooleanField()),
                ('food', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='nutrition.food')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.URLField()),
                ('highres', models.URLField()),
                ('is_user_uploaded', models.BooleanField()),
                ('food', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='nutrition.food')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100)),
                ('measure', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.CharField(max_length=50)),
                ('food_group', models.IntegerField()),
                ('tag_id', models.IntegerField()),
                ('food', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='nutrition.food')),
            ],
        ),
    ]
